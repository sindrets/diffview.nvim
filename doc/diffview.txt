*diffview.nvim*  Diffview.nvim

Single tabpage interface to easily cycle through diffs for all modified files
for any git rev.

Author: Sindre T. StrÃ¸m

==============================================================================

INTRODUCTION                                       *diffview-nvim-introduction*

Vim's diff mode is pretty good, but there is no convenient way to quickly bring
up all modified files in a diffsplit. This plugin aims to provide a simple,
unified, single tabpage, interface that lets you easily review all changed files
for any git rev.

USAGE                                                   *diffview-nvim-usage*

Quick-start: `:DiffviewOpen` to open a Diffview that compares against the
index.

You can have multiple Diffviews open, tracking different git revs. Each Diffview
opens in its own tabpage. To close and dispose of a Diffview, call either
`:DiffviewClose` or `:tabclose` while a Diffview is the current tabpage.
Diffviews are automatically updated:

        - Every time you enter a Diffview
        - On |BufWritePost|
        - On |FugitiveChanged|

Updates are not run unless the current tabpage is a Diffview.

CONFIGURATION                                   *diffview-nvim-configuration*

Example configuration with default settings:
>
    -- Lua
    local cb = require'diffview.config'.diffview_callback
    require'diffview'.setup {
      diff_binaries = false,    -- Show diffs for binaries
      file_panel = {
        width = 35,
        use_icons = true
      },
      key_bindings = {
        -- The `view` bindings are active in the diff buffers, only when the current
        -- tabpage is a Diffview.
        view = {
          ["<tab>"]     = cb("select_next_entry"),  -- Open the diff for the next file 
          ["<s-tab>"]   = cb("select_prev_entry"),  -- Open the diff for the previous file
          ["<leader>e"] = cb("focus_files"),        -- Bring focus to the files panel
          ["<leader>b"] = cb("toggle_files"),       -- Toggle the files panel.
        },
        file_panel = {
          ["j"]             = cb("next_entry"),         -- Bring the cursor to the next file entry
          ["<down>"]        = cb("next_entry"),
          ["k"]             = cb("prev_entry"),         -- Bring the cursor to the previous file entry.
          ["<up>"]          = cb("prev_entry"),
          ["<cr>"]          = cb("select_entry"),       -- Open the diff for the selected entry.
          ["o"]             = cb("select_entry"),
          ["<2-LeftMouse>"] = cb("select_entry"),
          ["-"]             = cb("toggle_stage_entry"), -- Stage / unstage the selected entry.
          ["S"]             = cb("stage_all"),          -- Stage all entries.
          ["U"]             = cb("unstage_all"),        -- Unstage all entries.
          ["R"]             = cb("refresh_files"),      -- Update stats and entries in the file list.
          ["<tab>"]         = cb("select_next_entry"),
          ["<s-tab>"]       = cb("select_prev_entry"),
          ["<leader>e"]     = cb("focus_files"),
          ["<leader>b"]     = cb("toggle_files"),
        }
      }
    }
<

LAYOUT                                                *diffview-nvim-layout*

The diff windows can be aligned either horizontally or vertically. To change
the alignment add either `horizontal` or `vertical` to your *'diffopt'* .

COMMANDS                                            *diffview-nvim-commands*

                                                        *:DiffviewOpen*
:DiffviewOpen [git-rev] [args] [ -- {paths...}]
                        Opens a new Diffview that compares against [git-rev].
                        If no [git-rev] is given, defaults to comparing
                        against the index. Additional {paths...} can be
                        provided to narrow down what files are shown.
                        Examples:
>
        :DiffviewOpen
        :DiffviewOpen HEAD~2
        :DiffviewOpen HEAD~4..HEAD~2
        :DiffviewOpen d4a7b0d
        :DiffviewOpen d4a7b0d..519b30e
        :DiffviewOpen HEAD~2 -- lua/diffview plugin
        :DiffviewOpen d4a7b0d -uno
<
    Args:
        -u[value], --untracked-files[={value}]
                        Specify whether or not to show untracked files. If
                        flag is given without value; defaults to `true`.
                        {value} can be one of:
                          - `true`, `normal`, `all` Show untracked.
                          - `false`, `no` Don't show untracked.
        --cached, --staged
                        Diff staged changes against [git-rev]. If not
                        [git-rev] is given, defaults to `HEAD`.

                                                        *:DiffviewClose*
:DiffviewClose          Close the active Diffview.

                                                        *:DiffviewToggleFiles*
:DiffviewToggleFiles    Toggles the files panel.

                                                        *:DiffviewFocusFiles*
:DiffviewFocusFiles     Brings focus to the file panel. Opens it if it's closed.

                                                        *:DiffviewRefresh*
:DiffviewRefresh        Update stats and entries in the file list of the
                        current Diffview.

MAPS                                                    *diffview-nvim-maps*

All listed maps are the defaults, but all mappings can be configured.

                                                      *diffview-nvim-maps-view*
View maps~

These maps are available in the diff buffers while a Diffview is the current
tabpage.

<Tab>                   Open the diff for the next file.

<S-Tab>                 Open the diff for the previous file.

<leader>b               Toggle the file panel.

<leader>e               Bring focus to the file panel.

                                               *diffview-nvim-maps-file-panel*
File panel maps~

These maps are available in the file panel buffer.

j                       Bring the cursor to the next file entry
<Down>

k                       Bring the cursor to the previous file entry
<Up>

o                       Open the diff for the selected file entry.
<CR>
<2-LeftMouse>

-                       Stage/unstage the selected file entry.

R                       Update the stats and entries in the file list.

<Tab>                   Open the diff for the next file.

<S-Tab>                 Open the diff for the previous file.

<leader>b               Toggle the file panel.

<leader>e               Bring focus to the file panel.

API                                              *diffview-api*

Diffview provides an API that lets plugins supply custom file data to create
custom diffviews.

Example usage:
https://gist.github.com/sindrets/b750723f5f23182904f70a6274106304

CView                                             *diffview.api.c-view.CView*

    Class that represents a custom Diffview.

    CView:new({opt})

        Parameters: ~
            {opt}   (table)   Table containing the args passed to the view
                              constructor.

        Fields: ~
            {git_root} (string)         Absolute path to the toplevel git
                                        directory.
            {left} (Rev)                The git rev representing the left
                                        window in the diffview.
            {right} (Rev)               The git rev representing the right
                                        window in the diffview.
            {files} (FileDict)          List of file data used to create the
                                        file entries in the view.
            {update_files} (function)   This function should return an updated
                                        list of `FileData`, and is called from
                                        `View:update_files`.
                Parameters: ~
                    {view} (CView)  The CView object that called the function.

            {get_file_data} (function)  This should return a list of lines that
                                        make up the buffer indicated by `path`
                                        and `split`.
                Parameters: ~
                    {kind} ("working"|"staged")
                    {path} (string)             Path to the file, relative to
                                                git root.
                    {split} ("left"|"right")

FileDict                                                *diffview.git.FileDict*

    Fields:~
        {working} (FileData[])
        {staged}  (FileData[])

FileData                                         *diffview.api.c-view.FileData*

    Table that contains the metadata used to create file entries.

    Fields: ~
        {path} (string)         Path relative to git root.
        {oldpath} (string|nil)  If the file has been renamed, this should be
                                the old path, otherwise nil.
        {status} (string)       Git status symbol. Can be one of:
                                `A`, `?`, `M`, `R`, `C`, `T`, `U`, `X`, `D`, `B`
                                See `man git-status` for the definition of the
                                different symbols.
        {stats} (GitStats|nil)  Table describing number of additions and
                                deletions in the file.
        {left_null} (boolean)   If true, indicates that the left diff buffer
                                should be represented by the null buffer.
        {right_null} (boolean)  If true, indicates that the right diff buffer
                                should be represented by the null buffer.
        {selected} (boolean)    If true, indicates that this should be the
                                initially selected file.

GitStats                                        *diffview.file-entry.GitStats*

    Table describing number of additions and deletions in a file.

    Fields: ~
        {additions} (integer)   Number of additons in the file.
        {deletions} (integer)   Number of deletions in the file.


 vim:tw=78:ts=8:ft=help:norl:
